TODO :

Feats :
- checker la fin de l'enregistrement des fichiers -message d'erreur quand en écriture
- adapter la config pour avoir possiblement 5 membres envoyés , transformer les slots en list de Gameobjects
- enregistrement des noms des participants associés à leurs IDs
- mettre le nom au dessus de la tête pour les viewers
- mettre un champ pour renseigner les prénoms des participants au démarrage
- fsync ?
- marquer le temps avec un bouton

Misc :
- Viz - fusion avec l'autre ? (toile d'araignée, fils,)
- Sauver la trace
- Trail texture fumée
- avoir plein de sphères qui bougent
- repères visuels du monde réel


UI VR probleme
déocher use vr headset quand on est server
lancer le client automatiquement si VR
filepath encore calé sur mon 


viewer instancie un joueur lorsque quelqu'un se logge mais il lui donne son nom
viewer peut bouger les spheres


Init doit à la fois créer des

1. Server/viewer en local
2. Client/player en local
3. Client/viewer en local

4. Client/viewer en externe
5. client/player en externe


1.
Instancie un viewerPrefab



Workshop Artec : 
https://docs.google.com/document/d/1n7zsj8FU2iJMob8DN4jmzC_PnF_lnULN8pXtodo_VDM/edit


Done:
- ajouter les messages OSC d'orientation de la tête
- Faire des gros boutons au début pour paramétrer vite le client/serveur et viewer/player
- offrir un GUI au serveur afin de pouvoir changer les modes d'affichage rapidement
- ajouter les messages OSC d'orientation de la tête
- Problème pour viewer, serveur crée quand même un joueur et client n'a pas la confirmation d'enregistrement
- enregistrer les rotations ? sous quelle forme
- ajouter des contrôles pour le viewer afin de lui permettre de choisir son point de vue
- miroir






Rôles update :
- serveur n'a pas d'affichage de la scène, c'est juste un GUI qui renvoie les positions de chaque client et peut changer le mode d'affichage
- parmi eux : voir les mains de l'autre, voir juste ses mains, voir des trainées sur les mains de l'autre, voir des trainées sur les siennes aussi,
un bouton par mode


- client viewer : peut choisir le point de vue de chaque joueur / piloter une cam en free mode / avoir un plan d'ensemble, fonctionne comme
un client normal et ajoute des joueurs + leur point de vue (besoin de l'orientation de la cam)

- client : same

Le Client register sur le réseau en envoyant son propre port d'écoute et son adresse IP par le biai du combo serverIP/remotePort
Si le port local du client n'est pas enregistré, le serveur l'ajoute à sa liste de pairs


Client envoie une requête avec son port d'écoute
Si le port est disponible, server renvoie une confirmation ainsi que la liste de tous les joueurs déjà présents

Si client reçoit la confirmation, il enregistre tous les joueurs présents, passe en mode jeu et envoie sa position


Dans le update :
- les clients envoient leurs positions au server
- le server envoie toutes les positions à tous les joueurs

Chaque userdata contient ses informations de connexion
le serveur peut garder un dictionnaire d'userdata qui contiendra les infos de contact en lui

tous les clients ne font qu'actualiser les positions de chaque entrée dans le dictionnaire

checker l'ouverture des ports au niveau du partfeu
