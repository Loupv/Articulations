TODO :

Prio1 :
- UI VR probleme
- pouvoir rejouer une performance CSV
- 

Prio2 :
- repères visuels du monde réel
- enregistrement des noms des participants associés à leurs IDs
- mettre un champ pour renseigner les prénoms des participants au démarrage
- Trail texture fumée
- pouvoir éditer le temps des trails

Prio3 :
- fsync ?
- marquer le temps avec un bouton
- virer le mode runinlocal -> plutôt identifier si ip server et ip client son pareils, dans ce cas envoyer un port diff à la registration
- waiting for server devrait invoker un init régulier d'OSC
- faire un ping in/out et mesurer le temps de latence
- ne pas pouvoir modifier les ip/ports dans l'éditeur pour forcer à l'utilisation du json - les mettre tous à 0 ?

Prio4
- adapter la config pour avoir possiblement 5 membres envoyés , transformer les slots en list de Gameobjects
- checker la fin de l'enregistrement des fichiers -message d'erreur quand en écriture
- Viz - fusion avec l'autre ? (toile d'araignée, fils,)
- Sauver la trace
- avoir plein de sphères qui bougent



Done:
- mettre le nom au dessus de la tête pour les viewers
- ajouter les messages OSC d'orientation de la tête
- Faire des gros boutons au début pour paramétrer vite le client/serveur et viewer/player
- offrir un GUI au serveur afin de pouvoir changer les modes d'affichage rapidement
- ajouter les messages OSC d'orientation de la tête
- Problème pour viewer, serveur crée quand même un joueur et client n'a pas la confirmation d'enregistrement
- enregistrer les rotations ? sous quelle forme
- ajouter des contrôles pour le viewer afin de lui permettre de choisir son point de vue
- miroir
déocher use vr headset quand on est server
lancer le client automatiquement si VR
filepath encore calé sur mon 



-----------------------------------------------------------

Workshop Artec : 
https://docs.google.com/document/d/1n7zsj8FU2iJMob8DN4jmzC_PnF_lnULN8pXtodo_VDM/edit







README 

-- serveur - n'a pas d'affichage de la scène, c'est juste un GUI qui renvoie les positions de chaque client et peut changer le mode d'affichage
    - parmi eux : voir les mains de l'autre, voir juste ses mains, voir des trainées sur les mains de l'autre, voir des trainées sur les siennes aussi,
    un bouton par mode

-- client viewer : peut choisir le point de vue de chaque joueur / piloter une cam en free mode / avoir un plan d'ensemble, fonctionne comme
un client normal et ajoute des joueurs + leur point de vue (besoin de l'orientation de la cam)

Le Client register sur le réseau en envoyant son propre port d'écoute et son adresse IP par le biai du combo serverIP/remotePort
Si le port local du client n'est pas enregistré, le serveur l'ajoute à sa liste de pairs
Client envoie une requête avec son port d'écoute
Si le port est disponible, server renvoie une confirmation ainsi que la liste de tous les joueurs déjà présents
Si client reçoit la confirmation, il enregistre tous les joueurs présents, passe en mode jeu et envoie sa position

Dans le update :
- les clients envoient leurs positions au server
- le server envoie toutes les positions à tous les joueurs

Chaque userdata contient ses informations de connexion
le serveur peut garder un dictionnaire d'userdata qui contiendra les infos de contact en lui
tous les clients ne font qu'actualiser les positions de chaque entrée dans le dictionnaire


PB-SOLVER

checker l'ouverture des ports au niveau du partfeu
activer mode debug
checker les logs
regarder les adresses dans les Gameobjects